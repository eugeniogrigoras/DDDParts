CREATE TABLE CATEGORIE-PRIMARIE (
    ID INT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(30),
    PRIMARY KEY (ID) 
);

CREATE TABLE TAG (
	ID INT NOT NULL AUTO_INCREMENT,
	NOME VARCHAR(20),
	PRIMARY KEY (ID)
);

CREATE TABLE CATEGORIE-SECONDARIE (
    ID INT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(30),
    FK-CATEGORIA-PRIMARIA INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (FK-CATEGORIA-PRIMARIA) REFERENCES CATEGORIE-PRIMARIE (ID)   
);

CREATE TABLE PROGETTI (
    ID INT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(30),
    LINK VARCHAR(100),
    DESCRIZIONE VARCHAR(300),
    FK-UTENTE INT,
    FK-CATEGORIA-SECONDARIA INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID),
    FOREIGN KEY (FK-CATEGORIA-SECONDARIA) REFERENCES CATEGORIE-SECONDARIE (ID)   
);

CREATE TABLE COLLEZIONI-COMPOSTE-DA-PROGETTI (
    ID INT NOT NULL AUTO_INCREMENT,
    FK-COLLEZIONE INT,
    FK-PROGETTO INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (FK-COLLEZIONE) REFERENCES COLLEZIONI (ID),
    FOREIGN KEY (FK-PROGETTO) REFERENCES PROGETTI (ID)
);

CREATE TABLE COLLEZIONI (
    ID INT NOT NULL AUTO_INCREMENT,
    TITOLO  VARCHAR(30),
    DATA-UPDATE  DATE,
    FK-UTENTE INT,
    PRIMARY KEY (ID),
    FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID)
);

CREATE TABLE UTENTI (
	ID INT NOT NULL AUTO_INCREMENT,
	COGNOME VARCHAR(30),
	COGNOME VARCHAR(30),
	EMAIL VARCHAR(30),
	DESCRIZIONE VARCHAR(300),
	PASSWORD VARCHAR(30),
	IMMAGINE-PROFILO VARCHAR(100),
	CODICE-CONFERMA VARCHAR(10),
	ACCETTATO BOOL,
	FK-COMUNE INT,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-COMUNE) REFERENCES comuni (id)
);

CREATE TABLE UTENTI-SEGUONO-UTENTI (
	ID INT NOT NULL AUTO_INCREMENT,
	FK-UTENTE INT,
	FK-UTENTE-SEGUITO INT,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID),
	FOREIGN KEY (FK-UTENTE-SEGUITO) REFERENCES UTENTI (ID)
);

CREATE TABLE UTENTI-SEGUONO-COLLEZIONI (
	ID INT NOT NULL AUTO_INCREMENT,
	FK-COLLEZIONE INT,
	FK-UTENTE INT,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID),
	FOREIGN KEY (FK-COLLEZIONE) REFERENCES COLLEZIONI (ID)
);

CREATE TABLE UTENTI-LIKE-COLELZIONI (
	ID INT NOT NULL AUTO_INCREMENT,
	FK-UTENTE INT,
	FK-COLLEZIONE INT,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID),
	FOREIGN KEY (FK-COLLEZIONE) REFERENCES COLLEZIONI (ID)
);

CREATE TABLE UTENTI-LIKE-PROGETTI (
	ID INT NOT NULL AUTO_INCREMENT,
	FK-UTENTE INT,
	FK-PROGETTO INT,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID),
	FOREIGN KEY (FK-PROGETTO) REFERENCES PREOGETTI (ID)
);

CREATE TABLE UTENTI-COMMENTANO-PROGETTI (
	ID INT NOT NULL AUTO_INCREMENT,
	FK-UTENTE INT,
	FK-PROGETTO INT,
	DATA DATETIME,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-UTENTE) REFERENCES UTENTI (ID),
	FOREIGN KEY (FK-PROGETTO) REFERENCES PROGETTI (ID)
);

CREATE TABLE PARTI-3D (
	ID INT NOT NULL AUTO_INCREMENT,
	NOME VARCHAR(30),
	LINK VARCHAR(100),
	FK-PROGETTO INT,
	DESCRIZIONE VARCHAR(300),
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-PROGETTO) REFERENCES PROGETTI (ID)
);

CREATE TABLE IMMAGINI (
	ID INT NOT NULL AUTO_INCREMENT,
	NOME VARCHAR(30),
	FK-PROGETTO INT,
	DESCRIZIONE VARCHAR(300),
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-PROGETTO) REFERENCES PROGETTI (ID)
);

CREATE TABLE PROGETTI-HANNO-TAG (
	ID INT NOT NULL AUTO_INCREMENT,
	FK-PROGETTO INT,
	FK-TAG INT,
	PRIMARY KEY (ID),
	FOREIGN KEY (FK-PROGETTO) REFERENCES PROGETTI (ID),
	FOREIGN KEY (FK-TAG) REFERENCES TAG (ID)
);

